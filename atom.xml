<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SLASH GAO&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://slashgao.github.io/"/>
  <updated>2019-07-01T03:51:22.483Z</updated>
  <id>https://slashgao.github.io/</id>
  
  <author>
    <name>SLASH GAO</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建基于Hexo和Next主题和Github Pages个人博客教程</title>
    <link href="https://slashgao.github.io/posts/79fa710a/"/>
    <id>https://slashgao.github.io/posts/79fa710a/</id>
    <published>2019-06-29T22:55:51.000Z</published>
    <updated>2019-07-01T03:51:22.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://link.zhihu.com/?target=https%3A//hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>官网下载 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><p>装好后可以用命令查看版本号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v10.16.0</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line">6.9.0</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#安装Hexo脚手架</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">#初始化Blog，创建blog文件夹</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line"></span><br><span class="line">#安装依赖</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>此时，文件下结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node_modules: 依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：生成文章的一些模板</span><br><span class="line">source：用来存放你的文章</span><br><span class="line">themes：主题</span><br><span class="line">_config.yml: 博客的配置文件</span><br></pre></td></tr></table></figure><p>最后，运行程序，显示如下信息就可以访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，看到博客已经搭建成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>设置主目录下的<code>_config.yml</code>文件，里面有网站基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#网站标题</span><br><span class="line">title: Hexo     </span><br><span class="line">#网站副标题</span><br><span class="line">subtitle:</span><br><span class="line">#网站描述</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">#作者名字</span><br><span class="line">author: John Doe</span><br><span class="line">#网站语言</span><br><span class="line">language:</span><br><span class="line">#时区</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p>具体全部配置参考<a href="https://link.juejin.im/?target=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2Fconfiguration" target="_blank" rel="noopener">官方文档</a>。</p><h3 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h3><p>在博客文件夹下运行，安装完成后在themes下多了一个next文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改主目录下的<code>_config.yml</code>, 把theme替换成next</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line"></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>打开主题配置文件打开<code>thems/next/_config.yml</code></p><h4 id="设置scheme外观样式"><a href="#设置scheme外观样式" class="headerlink" title="设置scheme外观样式"></a>设置scheme外观样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span><br><span class="line">#scheme: Mist - Muse 的紧凑版本，整洁有序的单栏外观</span><br><span class="line">#scheme: Pisces - 双栏 Scheme，小家碧玉似的清新</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><p>选择对应的外观，刷新浏览器即可预览。</p><h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><p>当需要<code>about</code>、<code>tags</code>、<code>categories</code> 需要手动创建这个页面，如果不创建点击则不会出现相应页面。</p><p>使用如下命令创建这些文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>之后<code>source</code>文件夹下就会出现三个这样的文件夹。</p><h4 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: #/images/avatar.gif</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: false</span><br><span class="line">  # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span><br><span class="line">  opacity: 1</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure><p>修改字段 <code>avatar</code>， url值设置成头像的链接地址</p><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>需要在<strong>主题配置文件</strong>中开启并填入微信和支付宝收款二维码图片地址 即可开启该功能</p><p>先生成微信和支付宝二维码图片，将图片放在<code>themes/next/source/images</code>下</p><p>微信:</p><ol><li>右上角的+</li><li>选择我要收款</li><li>保存相册</li></ol><p>支付宝:</p><ol><li>右上角的+</li><li>选择我要收款</li><li>保存相册</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, reward would be displayed in every article by default.</span><br><span class="line">  # You can show or hide reward in a specific article throuth `reward: true | false` in Front-matter.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 感谢您的支持将鼓励我继续创作！</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.jpg</span><br><span class="line">  alipay: /images/alipay.jpg</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure><h4 id="设置tags-和-categories"><a href="#设置tags-和-categories" class="headerlink" title="设置tags 和 categories"></a>设置tags 和 categories</h4><p>当菜单中有了 <code>tags</code> 和 <code>categories</code> 时，我们需要添加 <code>type</code> 属性</p><p>修改tags/index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-06-23 18:49:03</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改categories/index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-06-23 18:49:14</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="插件汇总"><a href="#插件汇总" class="headerlink" title="插件汇总"></a>插件汇总</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 更换Markdown渲染器</span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it-plus --save</span><br><span class="line"># 站内搜索插件</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"># 网站访问速度优化插件</span><br><span class="line">npm install hexo-filter-optimize --save</span><br><span class="line"># 统计阅读文字字数</span><br><span class="line">npm install hexo-symbols-count-time --save</span><br><span class="line"># sitemap插件</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line"># gulp 压缩插件</span><br><span class="line">npm install gulp --save</span><br><span class="line">npm install gulp-clean-css --save</span><br><span class="line">npm install gulp-htmlclean --save</span><br><span class="line">npm install gulp-htmlmin --save</span><br><span class="line">npm install gulp-imagemin --save</span><br><span class="line">npm install gulp-uglify --save</span><br><span class="line"># git depploy 插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"># 固定链接插件</span><br><span class="line">npm install hexo-abbrlink --save</span><br><span class="line"># -leancloud-counter安全插件，暂时未使用</span><br><span class="line">npm install hexo-leancloud-counter-security --save</span><br><span class="line"># valine 评论系统插件</span><br><span class="line">npm install valine --save</span><br><span class="line"># RSS插件</span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h4 id="添加-Disqus-评论服务"><a href="#添加-Disqus-评论服务" class="headerlink" title="添加 Disqus 评论服务"></a>添加 Disqus 评论服务</h4><p>访问主页 <a href="https://disqus.com/，点击" target="_blank" rel="noopener">https://disqus.com/，点击</a> <code>GET STARTED</code></p><p>注册Disqus</p><p>选择 <code>I want to install Disqus on my site</code></p><p>创建网站</p><ul><li><code>Website Name</code> 填写网站的名字</li><li><code>Shortname</code> 网站在Disqus的唯一标识</li><li><code>Category</code>：网站的类别，我这里创建的是技术类</li></ul><p>订阅</p><p>订阅图上所示的 <code>Free</code>：针对小型，个人、非盈利性，不提供任何广告的网站。除了 <code>Plus</code> 中的 <code>Direct Email Support</code>，其他特性都支持。</p><p>修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: Shortname - 换成刚才设置的Shortname</span><br><span class="line">  count: true</span><br><span class="line">  lazyload: false</span><br></pre></td></tr></table></figure><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>hexo new “Hello World”</p><p>会在<code>source</code>目录下自动创建一个名为 <code>Hello World.md</code> 的文件，打开这个文件写文章就行了。</p><p>同样我们需要每篇文章指定一个或多个 <code>tags</code> 和 一个 <code>categories</code>。这样你的菜单中<code>tags</code> 页面 和<code>categories</code>页面就会有内容了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2019-06-29 22:55:51</span><br><span class="line">tags:</span><br><span class="line">  - Hexo</span><br><span class="line">  - Next</span><br><span class="line">Categories:</span><br><span class="line">  - Hexo</span><br></pre></td></tr></table></figure><h2 id="部署到Github-Pages"><a href="#部署到Github-Pages" class="headerlink" title="部署到Github Pages"></a>部署到Github Pages</h2><p>Github Pages 是 Github 公司提供的免费的静态网站托管服务，用起来方便而且功能强大，不仅没有空间限制，还可以绑定自己的域名。很多非常著名的公司和项目也都用这种方式来搭建网站，如<a href="http://microsoft.github.io/" target="_blank" rel="noopener">微软</a>和 <a href="http://twitter.github.io/" target="_blank" rel="noopener">twitter</a> 的网站，还有 <a href="http://google.github.io/material-design-icons/" target="_blank" rel="noopener">谷歌的 Material Design 图标</a> 网站。</p><p>到 <a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a> 上，看到可以创建的网站有两类，一类是为自己或者是自己的组织创建站点，就是新建一个仓库，仓库的名字叫做，username.github.io 或者是 orgnizationname.github.io ，注意这里的 username 和 orgnizationname 要严格替换成你自己的用户名或者组织名，大小写也要区分，不然就会有问题。然后就往仓库里面放页面内容就行了。第二类是为项目创建网站，这个其实主要步骤都是一样的，只不过稍微比创建用户或组织网站复杂一点点。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>官网下载 <a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></p><p>装好后可以用命令查看版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">git version 2.22.0.windows.1</span><br></pre></td></tr></table></figure><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>登录or注册一个Github账号</p><p>New repository，新建仓库</p><p>创建一个和你用户名相同的仓库，用户名.github.io</p><h3 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h3><p>在命令行（即Git Bash）输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成的Key在当前用户的.ssh文件夹下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id_rsa</span><br><span class="line">id_rsa.pub</span><br></pre></td></tr></table></figure><p>把公钥id_rsa.pub放在GitHub上，这样当你连接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把你的id_rsa.pub里面的信息复制进去。</p><h3 id="配置Git-Bash"><a href="#配置Git-Bash" class="headerlink" title="配置Git Bash"></a>配置Git Bash</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱</p><p>查看是否配置成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">Hi slashgao! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>先安装部署到Github的依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改站点配置文件 _config.yml，找到deploy，修改为 YourgithubName为你的GitHub账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>生成及推送至Github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#清除已经生成的本地静态文件</span><br><span class="line">hexo clean</span><br><span class="line">#生成本地静态文件</span><br><span class="line">hexo generate</span><br><span class="line">#将本地静态文件推送至Github</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>效果参考我的博客，打开浏览器，访问<a href="http://slashgao.github.io">http://slashgao.github.io</a></p><h2 id="基于Travis-CI实现自动部署"><a href="#基于Travis-CI实现自动部署" class="headerlink" title="基于Travis CI实现自动部署"></a>基于Travis CI实现自动部署</h2><p>在使用 Hexo 写博客的时候，每次总是要使用 hexo deploy 将博客部署到 GitHub Pages，然后在把博客的源文件 push 到自己的 GitHub repository ，这就要求每次发布博客的时候要求搭建好Hexo环境。</p><p>有一个方便方法是引入Continuous Integration，简称 CI：意思是，在一个项目中，任何人对代码库的任何改动，都会触发 CI 服务器自动对项目进行构建，自动运行测试，自动编译，甚至自动部署到测试环境。这样做的好处就是，随时发现问题，随时修复。因为修复问题的成本随着时间的推移而增长，越早发现，修复成本越低。</p><p>Travis CI 是在线托管的 CI 服务，用 Travis 来进行持续集成，不需要自己搭服务器。</p><p><a href="https://docs.travis-ci.com/user/tutorial/" target="_blank" rel="noopener">官网对使用 Travis CI 有详细的使用步骤</a>：</p><ul><li><p>前往 <a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis-ci.com</a> and Sign up with GitHub.</p></li><li><p>接受授权</p></li><li><p>选择你想要使用 Travis CI 的仓库 或者 你也可以在 Github-settings-Applications-TravisCI-Configure 中去更新配置；</p></li><li><p>在你仓库怎增加 .travis.yml 文件，这个文件定义了构建的步骤，例如<a href="https://docs.travis-ci.com/user/job-lifecycle/#customizing-the-installation-phase" target="_blank" rel="noopener">安装依赖</a>等等。</p></li><li><p>将 .travis.yml 文件推送到你的远端仓库，然后就会触发 Travis CI 构建；</p></li><li><p>登录 <a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis CI</a>然后选择你的仓库查看构建任务的执行详情；</p></li></ul><p><strong>Job Lifecycle – Job 生命周期</strong></p><p>Travis CI 为每种编程语言提供默认构建环境和默认的阶段集。 创建虚拟机为你的Job提供构建环境，将存储库克隆到其中，安装可选的插件，然后运行构建阶段。</p><p>job 的声明周期，主要包含两大部分：</p><p>install：安装依赖，官网有专门讲解的 <a href="https://docs.travis-ci.com/user/installing-dependencies/" target="_blank" rel="noopener">Installing Dependencies</a></p><p>script：运行构建脚本；在 installation 阶段之前（beofore_install）、在 script phase 之前（before_script）或之后（after_script），你可以运行自定义命令；当构建成功或失败置换后，可以使用 after_success（例如构建文档）或 after_failure（例如上载日志文件）阶段执行其他操作（actions）。 </p><p>在 after_failure 和 after_success 中，您可以使用 $TRAVIS_TEST_RESULT 环境变量获取构建结果。</p><p>完整的 job 生命周期(包括三个可选的部署阶段，以及在检出 git 存储库 和更改到存储库目录) </p><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt addons 可选安装</span><br><span class="line">cache components 可选安装</span><br><span class="line">before_installinstall</span><br><span class="line">before_script</span><br><span class="line">script</span><br><span class="line">before_cache (for cleaning up cache) 可选</span><br><span class="line">after_success or after_failure</span><br><span class="line">before_deploy 可选</span><br><span class="line">deploy 可选</span><br><span class="line">after_deploy 可选</span><br><span class="line">after_script</span><br></pre></td></tr></table></figure><h3 id="配置Travis"><a href="#配置Travis" class="headerlink" title="配置Travis"></a>配置Travis</h3><p>为了能够实现代码推送到 Github，需要在Github 生成一个 Persional access tokens，在 <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">settings- Developer settings</a>可以生成。</p><p>然后进入 Travis 中的<a href="https://travis-ci.com/account/repositories" target="_blank" rel="noopener">项目设置界面</a>，可以给具体的代码库进行设置，比如增加环境变量：主要加了一个环境变量 GITHUB_TOKEN，这个在后面的 .travis.yml 文件中会用到。</p><h3 id="配置Github-Repository"><a href="#配置Github-Repository" class="headerlink" title="配置Github Repository"></a>配置Github Repository</h3><p>之前的博客代码库只有一个 master 分支，存放的都是 hexo g 命令生成的静态文件。</p><p>现在改成把博客代码库放到dev分支，再由Travis CI 生成博客再部署到master分支上。</p><ul><li><p>本地准备好博客代码库</p></li><li><p>新建一个dev分支：</p><p>git checkout -b dev</p></li><li><p>添加 .travis.yml 文件</p><p>Travis CI 会执行用户定义的 .travis.yml 脚本。我想在这个脚本中实现：使用 Hexo 生成博客内容，再将博客内容部署到 YourgithubName.github.io 项目的 master 分支 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js: stable</span><br><span class="line"></span><br><span class="line">env:</span><br><span class="line">  global:</span><br><span class="line">    - GH_REF: github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line"></span><br><span class="line">branchs:</span><br><span class="line">  only:</span><br><span class="line">    - dev</span><br><span class="line"></span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - node_modules</span><br><span class="line"></span><br><span class="line"># Start: Build Lifecycle</span><br><span class="line">before_install:</span><br><span class="line">  - npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">  - npm install</span><br><span class="line"></span><br><span class="line">#before_script:</span><br><span class="line"></span><br><span class="line">script:</span><br><span class="line">  - hexo clean</span><br><span class="line">  - hexo generate</span><br><span class="line"></span><br><span class="line">after_script:</span><br><span class="line">  - cd ./public</span><br><span class="line">  - git init</span><br><span class="line">  - git config user.name &quot;yourname&quot;</span><br><span class="line">  - git config user.email &quot;youremail&quot;</span><br><span class="line">  - git add .</span><br><span class="line">  - git commit -m &quot;Update docs&quot;</span><br><span class="line">  - git push --force --quiet &quot;https://$&#123;GITHUB_TOKEN&#125;@$&#123;GH_REF&#125;&quot; master:master</span><br><span class="line"># End: Build LifeCycle</span><br></pre></td></tr></table></figure></li><li><p>把主题文件下的 .git 目录删除，不然主题文件不会推送到Github</p></li></ul><h3 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#查看当前branch</span><br><span class="line">git branch</span><br><span class="line">git add .</span><br><span class="line">#提交修改</span><br><span class="line">git commit -m &quot;init documents&quot;</span><br><span class="line">#推送到dev分支</span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p>此时在Travis CI中自动生成已启动，可以查看具体日志。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h2&gt;&lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub
      
    
    </summary>
    
      <category term="Hexo" scheme="https://slashgao.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://slashgao.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://slashgao.github.io/tags/Next/"/>
    
      <category term="Github Pages" scheme="https://slashgao.github.io/tags/Github-Pages/"/>
    
      <category term="Travis CI" scheme="https://slashgao.github.io/tags/Travis-CI/"/>
    
  </entry>
  
</feed>
